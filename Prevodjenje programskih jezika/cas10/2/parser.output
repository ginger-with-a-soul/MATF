Grammar

    0 $accept: pocetak $end

    1 pocetak: E

    2 E: E '+' T
    3  | T

    4 T: T '*' F
    5  | F

    6 F: '(' E ')'
    7  | broj_token


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
'*' (42) 4
'+' (43) 2
error (256)
broj_token <vrednost> (258) 7


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
pocetak (9)
    on left: 1, on right: 0
E <vrednost> (10)
    on left: 2 3, on right: 1 2 6
T <vrednost> (11)
    on left: 4 5, on right: 2 3 4
F <vrednost> (12)
    on left: 6 7, on right: 4 5


State 0

    0 $accept: . pocetak $end

    broj_token  shift, and go to state 1
    '('         shift, and go to state 2

    pocetak  go to state 3
    E        go to state 4
    T        go to state 5
    F        go to state 6


State 1

    7 F: broj_token .

    $default  reduce using rule 7 (F)


State 2

    6 F: '(' . E ')'

    broj_token  shift, and go to state 1
    '('         shift, and go to state 2

    E  go to state 7
    T  go to state 5
    F  go to state 6


State 3

    0 $accept: pocetak . $end

    $end  shift, and go to state 8


State 4

    1 pocetak: E .
    2 E: E . '+' T

    '+'  shift, and go to state 9

    $default  reduce using rule 1 (pocetak)


State 5

    3 E: T .
    4 T: T . '*' F

    '*'  shift, and go to state 10

    $default  reduce using rule 3 (E)


State 6

    5 T: F .

    $default  reduce using rule 5 (T)


State 7

    2 E: E . '+' T
    6 F: '(' E . ')'

    '+'  shift, and go to state 9
    ')'  shift, and go to state 11


State 8

    0 $accept: pocetak $end .

    $default  accept


State 9

    2 E: E '+' . T

    broj_token  shift, and go to state 1
    '('         shift, and go to state 2

    T  go to state 12
    F  go to state 6


State 10

    4 T: T '*' . F

    broj_token  shift, and go to state 1
    '('         shift, and go to state 2

    F  go to state 13


State 11

    6 F: '(' E ')' .

    $default  reduce using rule 6 (F)


State 12

    2 E: E '+' T .
    4 T: T . '*' F

    '*'  shift, and go to state 10

    $default  reduce using rule 2 (E)


State 13

    4 T: T '*' F .

    $default  reduce using rule 4 (T)
